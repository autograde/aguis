---
  - name: Ensure group {{ autograder_group }} exists
    ansible.builtin.group:
      name: "{{ autograder_group }}"
      state: present

  - name: Create {{ autograder_user }} runner user
    ansible.builtin.user:
      create_home: true
      name: "{{ autograder_user }}"
      group: "{{ autograder_group }}"
      shell: /bin/bash

  - name: Setup GOPATH for {{ autograder_user }}
    become_user: "{{ autograder_user }}"
    ansible.builtin.copy:
      content: |
        export GOPATH={{ autograder_home }}/go
        export PATH=$PATH:$GOPATH/bin
        export GO111MODULE=on
      dest: "{{ autograder_home }}/.bashrc"
      mode: 0644

  - name: Define GOPATH facts
    become_user: "{{ autograder_user }}"
    ansible.builtin.set_fact:
      GOPATH: "{{ autograder_home }}/go"
    when: GOPATH is not defined
  
  - name: Define PATH facts
    become_user: "{{ autograder_user }}"
    ansible.builtin.set_fact:
      PATH: "{{ ansible_env.PATH }}:{{ GOPATH }}/bin"
    when: GOPATH is defined

  - name: Define GO111MODULE facts
    become_user: "{{ autograder_user }}"
    ansible.builtin.set_fact:
      GO111MODULE: "on"
    when: GO111MODULE is not defined

  # go dependencies
  - name: Get Go dependencies packages
    become_user: "{{ autograder_user }}"
    ansible.builtin.command: go get -u {{ item }}
    environment:
      PATH: "{{ PATH }}"
      GOPATH: "{{ GOPATH }}"
      GO111MODULE: "{{ GO111MODULE }}"
    with_items: "{{ go_dependencies }}"

  # grpcweb
  - name: Set facts for grpcweb package
    ansible.builtin.set_fact:
      grpcweb_bin: "{{ grpcweb_path }}/{{ protoc_grpcweb }}"
      protoc_grpcweb_url: "{{ grpcweb_repo }}/{{ grpcweb_version }}/{{ protoc_grpcweb }}-{{ grpcweb_version }}-{{ ansible_system }}-{{ ansible_machine }}"

  - name: Download grpcweb protoc plugin
    ansible.builtin.get_url:
      url: "{{ protoc_grpcweb_url }}"
      dest: "{{ grpcweb_bin }}"
      mode: '0755'

  # quickfeed
  - name: Clone quickfeed source
    become_user: "{{ autograder_user }}"
    ansible.builtin.git:
      repo: "{{ quickfeed_repo }}"
      dest: "{{ quickfeed_root }}"
      version: "{{ quickfeed_branch }}"
      force: yes

  - name: Ensure permissions
    ansible.builtin.file:
      path: "{{ autograder_home }}"
      owner: "{{ autograder_user }}"
      group: "{{ autograder_group }}"
      recurse: yes

  - name: Build quickfeed ui
    become_user: "{{ autograder_user }}"
    ansible.builtin.shell: "cd {{ quickfeed_root }} && make ui"

  - name: Compile quickfeed proto files
    become_user: "{{ autograder_user }}"
    ansible.builtin.shell: "cd {{ quickfeed_root }} && go list && make proto"
    environment:
      PATH: "{{ PATH }}"
      GOPATH: "{{ GOPATH }}"
      GO111MODULE: "{{ GO111MODULE }}"

  - name: Build quickfeed source
    become_user: "{{ autograder_user }}"
    ansible.builtin.shell: "cd {{ quickfeed_root }} && make install"
    environment:
      PATH: "{{ PATH }}"
      GOPATH: "{{ GOPATH }}"
      GO111MODULE: "{{ GO111MODULE }}"

  - name: Build gosecret command
    become_user: "{{ autograder_user }}"
    ansible.builtin.shell: "cd {{ quickfeed_root }} && go build -o {{ GOPATH }}/bin/gosecret ./cmd/gosecret"
    environment:
      PATH: "{{ PATH }}"
      GOPATH: "{{ GOPATH }}"
      GO111MODULE: "{{ GO111MODULE }}"
