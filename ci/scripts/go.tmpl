#image/golang:latest

echo "\n=== Preparing for Test Execution ===\n"
echo "Current dir: `pwd`"

git config --global url."https://{{ .CreatorAccessToken }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

# Fetch student repo
git clone {{ .GetURL }} assignments
# Fetch tests repo
git clone {{ .TestURL }}

# Move to folder for assignment to test.
cd assignments/{{ .AssignmentName }}/

# Fail student code that attempts to access secret
if grep --quiet -r -e common.Secret -e GlobalSecret * ; then
  echo "\n=== Misbehavior Detected: Failed ===\n"
  exit
fi

# Make sure there are no Autograder tests in the student repo
rm $(find ./ | grep _ag_test.go)

echo "Removing `pwd`/go.mod, if any"
rm -f go.mod

# Create common dir (silently, if already exists)
mkdir -p /go/tests/common

# Generate new secret.go with new secret value for each run
cat <<EOF > /go/tests/common/secret.go
package common

func Secret() string {
  return "{{ .RandomSecret }}"
}
EOF

# Copy tests into student assignments folder for running tests
cp -r /go/tests/* /go/assignments/

# Clear access token and the shell history to avoid leaking information to student test code.
git config --global url."https://0:x-oauth-basic@github.com/".insteadOf "https://github.com/"
history -c

# (ensure) Move to folder for assignment to test.
cd /go/assignments/{{ .AssignmentName }}/

# Perform lab specific setup
if [ -f "setup.sh" ]; then
    bash setup.sh
fi

# Avoid fetching dependencies from proxy.
export GOPROXY=direct

echo "\n=== Running Tests ===\n"
go test -v ./... 2>&1
echo "\n=== Finished Running Tests ===\n"
